<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AOIBBPAvwc7vqglp41IAAAAASUVORK5CYII=
</value>
  </data>
</root>